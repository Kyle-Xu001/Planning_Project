import numpy as np


class linearized_qued_model:
    def __init__(self):
        self.mass = 0.18 # kg
        self.g = 9.81 # m/s^2
        self.arm_length = 0.086 # meter
        L = self.arm_length
        self.A = np.array([[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0],
                            [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0],
                            [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0],
                            [0, 0, 0, 0, 0, 0, 0, self.g, 0, 0, 0, 0],
                            [0, 0, 0, 0, 0, 0, -self.g, 0, 0, 0, 0, 0],
                            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                            [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0],
                            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0],
                            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
                            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], ])
        self.B = np.array([[0, 0, 0, 0],
                             [0, 0, 0, 0],
                             [0, 0, 0, 0],
                             [0, 0, 0, 0],
                             [0, 0, 0, 0],
                             [1/self.mass, 0, 0, 0],
                             [0, 0, 0, 0],
                             [0, 0, 0, 0],
                             [0, 0, 0, 0],
                             [0, L*4000, 0, 0],
                             [0, 0, L*4310.34, 0],
                             [0, 0, 0, L*2675.23], ])
        self.R = np.diag([1, 1, 1, 1])

if __name__=="__main__":        
    model = linearized_qued_model()
    A = model.A.T
    res = A @ A @ A @ A
    B = model.B
    print(B @ B.T)